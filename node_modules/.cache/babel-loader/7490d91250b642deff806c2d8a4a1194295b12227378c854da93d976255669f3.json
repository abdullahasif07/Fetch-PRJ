{"ast":null,"code":"import { ref } from \"vue\";\nimport { useRoute } from 'vue-router';\nexport default {\n  props: [\"name\"],\n  setup() {\n    const names = ref([]);\n    const error = ref(null);\n    const img_app = ref(null);\n    const route = useRoute();\n    const img = ref(null);\n    const load = async () => {\n      try {\n        let data = await fetch(\"http://localhost:3000/people_array_1\");\n        if (!data.ok) {\n          throw new Error(\"No data available\");\n        }\n        names.value = await data.json();\n        let filter = names.value.filter(item => item.id === +route.params.id);\n        img_app.value = filter[0].img;\n        img.value = img_app.value;\n      } catch (err) {\n        error.value = err.message;\n      }\n    };\n    load();\n    return {\n      names,\n      error,\n      img // Return the reactive img variable\n    };\n  }\n};","map":{"version":3,"names":["ref","useRoute","props","setup","names","error","img_app","route","img","load","data","fetch","ok","Error","value","json","filter","item","id","params","err","message"],"sources":["C:\\Users\\Muhammad Abdullah\\Desktop\\fetch-prj\\prj\\src\\components\\Applicant_info.vue"],"sourcesContent":["<template>\r\n  <div class=\"applicant\">\r\n    <h1>{{ name ?? \"N/A\" }}</h1>\r\n    <img :src='\"../assets/images/man.jpg\"' alt=\"image\" class=\"image\" />\r\n    <p>{{ img }}</p>\r\n    <p>Qualifications: {{ $route.query.desc }}</p>\r\n    <p>ID: {{ $route.params.id }}</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from \"vue\";\r\nimport { useRoute } from 'vue-router';\r\n\r\nexport default {\r\n  props: [\"name\"],\r\n\r\n  setup() {\r\n    const names = ref([]);\r\n    const error = ref(null);\r\n    const img_app = ref(null);\r\n    const route = useRoute();\r\n    const img = ref(null); \r\n\r\n    const load = async () => {\r\n      try {\r\n        let data = await fetch(\"http://localhost:3000/people_array_1\");\r\n        if (!data.ok) {\r\n          throw new Error(\"No data available\");\r\n        }\r\n        names.value = await data.json();\r\n        let filter = names.value.filter((item) => item.id === +route.params.id);\r\n        img_app.value = filter[0].img;\r\n        img.value = img_app.value; \r\n      } catch (err) {\r\n        error.value = err.message;\r\n      }\r\n    };\r\n\r\n    load();\r\n\r\n    return {\r\n      names,\r\n      error,\r\n      img, // Return the reactive img variable\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style></style>\r\n\r\n"],"mappings":"AAWA,SAASA,GAAE,QAAS,KAAK;AACzB,SAASC,QAAO,QAAS,YAAY;AAErC,eAAe;EACbC,KAAK,EAAE,CAAC,MAAM,CAAC;EAEfC,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIJ,GAAG,CAAC,EAAE,CAAC;IACrB,MAAMK,KAAI,GAAIL,GAAG,CAAC,IAAI,CAAC;IACvB,MAAMM,OAAM,GAAIN,GAAG,CAAC,IAAI,CAAC;IACzB,MAAMO,KAAI,GAAIN,QAAQ,CAAC,CAAC;IACxB,MAAMO,GAAE,GAAIR,GAAG,CAAC,IAAI,CAAC;IAErB,MAAMS,IAAG,GAAI,MAAAA,CAAA,KAAY;MACvB,IAAI;QACF,IAAIC,IAAG,GAAI,MAAMC,KAAK,CAAC,sCAAsC,CAAC;QAC9D,IAAI,CAACD,IAAI,CAACE,EAAE,EAAE;UACZ,MAAM,IAAIC,KAAK,CAAC,mBAAmB,CAAC;QACtC;QACAT,KAAK,CAACU,KAAI,GAAI,MAAMJ,IAAI,CAACK,IAAI,CAAC,CAAC;QAC/B,IAAIC,MAAK,GAAIZ,KAAK,CAACU,KAAK,CAACE,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAC,KAAM,CAACX,KAAK,CAACY,MAAM,CAACD,EAAE,CAAC;QACvEZ,OAAO,CAACQ,KAAI,GAAIE,MAAM,CAAC,CAAC,CAAC,CAACR,GAAG;QAC7BA,GAAG,CAACM,KAAI,GAAIR,OAAO,CAACQ,KAAK;MAC3B,EAAE,OAAOM,GAAG,EAAE;QACZf,KAAK,CAACS,KAAI,GAAIM,GAAG,CAACC,OAAO;MAC3B;IACF,CAAC;IAEDZ,IAAI,CAAC,CAAC;IAEN,OAAO;MACLL,KAAK;MACLC,KAAK;MACLG,GAAG,CAAE;IACP,CAAC;EACH;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}