{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Here you will find a list of applicants\", -1 /* HOISTED */);\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, $setup.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"p\", null, \"Error: \" + _toDisplayString($setup.error), 1 /* TEXT */)])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.names, applicant => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: applicant.id\n    }, [_createVNode(_component_router_link, {\n      to: {\n        name: 'Applicant_info',\n        params: {\n          id: applicant.id\n        }\n      }\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"h2\", null, _toDisplayString(applicant.name), 1 /* TEXT */)]),\n\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"to\"])]);\n  }), 128 /* KEYED_FRAGMENT */))]))]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_hoisted_1","$setup","error","_hoisted_2","_toDisplayString","_hoisted_3","_Fragment","_renderList","names","applicant","key","id","_createVNode","_component_router_link","to","name"],"sources":["C:\\Users\\Muhammad Abdullah\\Desktop\\fetch-prj\\prj\\src\\components\\Applicants.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h1>Here you will find a list of applicants</h1>\r\n      <div v-if=\"error\">\r\n        <p>Error: {{ error }}</p>\r\n      </div>\r\n      <div v-else>\r\n        <div v-for=\"applicant in names\" :key=\"applicant.id\">\r\n          <router-link\r\n            :to=\"{\r\n              name: 'Applicant_info',\r\n              params: {\r\n                id: applicant.id,\r\n              },\r\n            }\"\r\n          >\r\n            <h2>{{ applicant.name }}</h2>\r\n          </router-link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { ref } from \"vue\";\r\n  export default {\r\n    name: \"applicants\",\r\n    setup() {\r\n      const names = ref([]);\r\n      const error = ref(null);\r\n  \r\n      const load = async () => {\r\n        try {\r\n          let data = await fetch(\"http://localhost:3000/people_array_1\");\r\n          if (!data.ok) {\r\n            throw new Error(\"No data available\");\r\n          }\r\n          names.value = await data.json();\r\n        } catch (err) {\r\n          error.value = err.message;\r\n        }\r\n      };\r\n  \r\n  \r\n      load();\r\n  \r\n      // Return the reactive variables from the setup function.\r\n      return {\r\n        names,\r\n        error,\r\n      };\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style></style>\r\n  \r\n"],"mappings":";gCAEMA,mBAAA,CAAgD,YAA5C,yCAAuC;;;;;;;;;uBAD7CC,mBAAA,CAmBM,cAlBJC,UAAgD,EACrCC,MAAA,CAAAC,KAAK,I,cAAhBH,mBAAA,CAEM,OAAAI,UAAA,GADJL,mBAAA,CAAyB,WAAtB,SAAO,GAAAM,gBAAA,CAAGH,MAAA,CAAAC,KAAK,iB,oBAEpBH,mBAAA,CAaM,OAAAM,UAAA,I,kBAZJN,mBAAA,CAWMO,SAAA,QAAAC,WAAA,CAXmBN,MAAA,CAAAO,KAAK,EAAlBC,SAAS;yBAArBV,mBAAA,CAWM;MAX2BW,GAAG,EAAED,SAAS,CAACE;QAC9CC,YAAA,CAScC,sBAAA;MARXC,EAAE;;;cAAyFL,SAAS,CAACE;;;;wBAOtG,MAA6B,CAA7Bb,mBAAA,CAA6B,YAAAM,gBAAA,CAAtBK,SAAS,CAACM,IAAI,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}