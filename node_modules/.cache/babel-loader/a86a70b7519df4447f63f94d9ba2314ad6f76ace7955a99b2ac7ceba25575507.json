{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"applicant\"\n};\nconst _hoisted_2 = [\"src\", \"alt\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h1\", null, _toDisplayString($props.name ?? \"N/A\"), 1 /* TEXT */), _createElementVNode(\"img\", {\n    src: $options.getImgUrl('man_2.jpg'),\n    alt: _ctx.pic\n  }, null, 8 /* PROPS */, _hoisted_2), _createCommentVNode(\" <img :src=\\\"img\\\" alt=\\\"image\\\" class=\\\"image\\\" /> \"), _createCommentVNode(\" <p>{{ img }}</p> \"), _createElementVNode(\"p\", null, \"Qualifications: \" + _toDisplayString(_ctx.$route.query.desc), 1 /* TEXT */), _createElementVNode(\"p\", null, \"ID: \" + _toDisplayString(_ctx.$route.params.id), 1 /* TEXT */)]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_toDisplayString","$props","name","src","$options","getImgUrl","alt","_ctx","pic","_createCommentVNode","$route","query","desc","params","id"],"sources":["C:\\Users\\Muhammad Abdullah\\Desktop\\fetch-prj\\prj\\src\\components\\Applicant_info.vue"],"sourcesContent":["<template>\r\n  <div class=\"applicant\">\r\n    <h1>{{ name ?? \"N/A\" }}</h1>\r\n    <img :src=\"getImgUrl('man_2.jpg')\" v-bind:alt=\"pic\">\r\n    <!-- <img :src=\"img\" alt=\"image\" class=\"image\" /> -->\r\n    <!-- <p>{{ img }}</p> -->\r\n    <p>Qualifications: {{ $route.query.desc }}</p>\r\n    <p>ID: {{ $route.params.id }}</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from \"vue\";\r\nimport { useRoute } from 'vue-router';\r\n\r\nexport default {\r\n  props: [\"name\"],\r\n  methods: {\r\n    getImgUrl(pic) {\r\n    return require('../assets/images/'+pic)\r\n}\r\n  },\r\n\r\n  setup() {\r\n    const names = ref([]);\r\n    const error = ref(null);\r\n    const img_app = ref(null);\r\n    const route = useRoute();\r\n    const img = ref(null); \r\n\r\n    const load = async () => {\r\n      try {\r\n        let data = await fetch(\"http://localhost:3000/people_array_1\");\r\n        if (!data.ok) {\r\n          throw new Error(\"No data available\");\r\n        }\r\n        names.value = await data.json();\r\n        let filter = names.value.filter((item) => item.id === +route.params.id);\r\n        img_app.value = filter[0].img;\r\n        img.value = img_app.value; \r\n      } catch (err) {\r\n        error.value = err.message;\r\n      }\r\n    };\r\n\r\n    load();\r\n\r\n    return {\r\n      names,\r\n      error,\r\n      img, // Return the reactive img variable\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style></style>\r\n\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAW;;;uBAAtBC,mBAAA,CAOM,OAPNC,UAOM,GANJC,mBAAA,CAA4B,YAAAC,gBAAA,CAArBC,MAAA,CAAAC,IAAI,2BACXH,mBAAA,CAAoD;IAA9CI,GAAG,EAAEC,QAAA,CAAAC,SAAS;IAAsBC,GAAG,EAAEC,IAAA,CAAAC;uCAC/CC,mBAAA,wDAAqD,EACrDA,mBAAA,sBAAyB,EACzBV,mBAAA,CAA8C,WAA3C,kBAAgB,GAAAC,gBAAA,CAAGO,IAAA,CAAAG,MAAM,CAACC,KAAK,CAACC,IAAI,kBACvCb,mBAAA,CAAiC,WAA9B,MAAI,GAAAC,gBAAA,CAAGO,IAAA,CAAAG,MAAM,CAACG,MAAM,CAACC,EAAE,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}