{"ast":null,"code":"import { ref } from \"vue\";\nimport { useRoute } from 'vue-router';\nexport default {\n  // props: [\"id\", \"name\"],\n\n  // computed: {\n  //   img() {\n  //     return this.$route.query.img || \"\";\n  //   },\n  // },\n  setup() {\n    const names = ref([]);\n    const error = ref(null);\n    const img_app = ref(null);\n    const route = useRoute();\n    const load = async () => {\n      try {\n        let data = await fetch(\"http://localhost:3000/people_array_1\");\n        if (!data.ok) {\n          throw new Error(\"No data available\");\n        }\n        names.value = await data.json();\n        console.log('names.value', names.value);\n        // let filter = names.value.filter((item) =>  { return item.id === route.params.id });\n        let filter = names.value.filter(item => item.id === +route.params.id);\n        console.log('filter', filter);\n        img_app.value = filter[0].img;\n        console.log('filter', filter[0].img);\n        console.log('img app', img_app);\n      } catch (err) {\n        error.value = err.message;\n      }\n    };\n    load();\n    return {\n      names,\n      error,\n      img_app\n    };\n  }\n};","map":{"version":3,"names":["ref","useRoute","setup","names","error","img_app","route","load","data","fetch","ok","Error","value","json","console","log","filter","item","id","params","img","err","message"],"sources":["C:\\Users\\Muhammad Abdullah\\Desktop\\fetch-prj\\prj\\src\\components\\Applicant_info.vue"],"sourcesContent":["<template>\r\n  <div class=\"applicant\">\r\n    <h1>{{ name ?? \"N/A\" }}</h1>\r\n    <img :src=\"img_app\" alt=\"\" class=\"image\" />\r\n    <p>Qualifications: {{ $route.query.desc }}</p>\r\n    <p>ID: {{ $route.params.id }}</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from \"vue\";\r\nimport { useRoute } from 'vue-router'\r\nexport default {\r\n  // props: [\"id\", \"name\"],\r\n\r\n  // computed: {\r\n  //   img() {\r\n  //     return this.$route.query.img || \"\";\r\n  //   },\r\n  // },\r\n  setup() {\r\n    const names = ref([]);\r\n    const error = ref(null);\r\n    const img_app = ref(null);\r\n    const route = useRoute()\r\n\r\n    const load = async () => {\r\n      try {\r\n        let data = await fetch(\"http://localhost:3000/people_array_1\");\r\n        if (!data.ok) {\r\n          throw new Error(\"No data available\");\r\n        }\r\n        names.value = await data.json();\r\n        console.log('names.value', names.value);\r\n        // let filter = names.value.filter((item) =>  { return item.id === route.params.id });\r\n        let filter =  names.value.filter((item) =>  item.id === +route.params.id )\r\n        console.log('filter', filter);\r\n        img_app.value = filter[0].img;\r\n        console.log('filter', filter[0].img);\r\n        console.log('img app',img_app)\r\n      } catch (err) {\r\n        error.value = err.message;\r\n      }\r\n    };\r\n\r\n    load();\r\n\r\n    return {\r\n      names,\r\n      error,\r\n      img_app,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style></style>\r\n"],"mappings":"AAUA,SAASA,GAAE,QAAS,KAAK;AACzB,SAASC,QAAO,QAAS,YAAW;AACpC,eAAe;EACb;;EAEA;EACA;EACA;EACA;EACA;EACAC,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIH,GAAG,CAAC,EAAE,CAAC;IACrB,MAAMI,KAAI,GAAIJ,GAAG,CAAC,IAAI,CAAC;IACvB,MAAMK,OAAM,GAAIL,GAAG,CAAC,IAAI,CAAC;IACzB,MAAMM,KAAI,GAAIL,QAAQ,CAAC;IAEvB,MAAMM,IAAG,GAAI,MAAAA,CAAA,KAAY;MACvB,IAAI;QACF,IAAIC,IAAG,GAAI,MAAMC,KAAK,CAAC,sCAAsC,CAAC;QAC9D,IAAI,CAACD,IAAI,CAACE,EAAE,EAAE;UACZ,MAAM,IAAIC,KAAK,CAAC,mBAAmB,CAAC;QACtC;QACAR,KAAK,CAACS,KAAI,GAAI,MAAMJ,IAAI,CAACK,IAAI,CAAC,CAAC;QAC/BC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEZ,KAAK,CAACS,KAAK,CAAC;QACvC;QACA,IAAII,MAAK,GAAKb,KAAK,CAACS,KAAK,CAACI,MAAM,CAAEC,IAAI,IAAMA,IAAI,CAACC,EAAC,KAAM,CAACZ,KAAK,CAACa,MAAM,CAACD,EAAG;QACzEJ,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEC,MAAM,CAAC;QAC7BX,OAAO,CAACO,KAAI,GAAII,MAAM,CAAC,CAAC,CAAC,CAACI,GAAG;QAC7BN,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEC,MAAM,CAAC,CAAC,CAAC,CAACI,GAAG,CAAC;QACpCN,OAAO,CAACC,GAAG,CAAC,SAAS,EAACV,OAAO;MAC/B,EAAE,OAAOgB,GAAG,EAAE;QACZjB,KAAK,CAACQ,KAAI,GAAIS,GAAG,CAACC,OAAO;MAC3B;IACF,CAAC;IAEDf,IAAI,CAAC,CAAC;IAEN,OAAO;MACLJ,KAAK;MACLC,KAAK;MACLC;IACF,CAAC;EACH;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}