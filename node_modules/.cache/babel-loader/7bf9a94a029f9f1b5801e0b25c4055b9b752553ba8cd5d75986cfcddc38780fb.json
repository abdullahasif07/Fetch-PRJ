{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Here you will list of applicants\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.names, applicant => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: applicant.id\n    }, [_createVNode(_component_router_link, {\n      to: {\n        name: 'Applicant_info',\n        params: {\n          id: applicant.id,\n          desc: applicant.qualifications,\n          img: applicant.img,\n          name: applicant.name\n        }\n      }\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"h2\", null, _toDisplayString(applicant.name), 1 /* TEXT */)]),\n\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"to\"])]);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_hoisted_1","_Fragment","_renderList","_ctx","names","applicant","key","id","_createVNode","_component_router_link","to","qualifications","img","name","_toDisplayString"],"sources":["C:\\Users\\Muhammad Abdullah\\Desktop\\fetch-prj\\prj\\src\\components\\Applicants.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>Here you will list of applicants</h1>\r\n    <div v-for=\"applicant in names\" :key=\"applicant.id\">\r\n      <router-link\r\n        :to=\"{\r\n          name: 'Applicant_info',\r\n          params: {\r\n            id: applicant.id,\r\n            desc: applicant.qualifications,\r\n            img: applicant.img,\r\n            name: applicant.name,\r\n          },\r\n        }\"\r\n      >\r\n        <h2>{{ applicant.name }}</h2>\r\n      </router-link>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from \"vue\";\r\nexport default {\r\n  name: \"applicants\",\r\n  setup() {\r\n    const names = ref([]);\r\n    const error = ref(null);\r\n\r\n    const load = async () => {\r\n      try {\r\n        let data = await fetch(\" http://localhost:3000/people_array_1\");\r\n        if (!data.ok) {\r\n          throw Error(\"No data available\");\r\n        }\r\n        names.value = await data.json();\r\n      } catch (err) {\r\n        error.value = err.message;\r\n      }\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style></style>\r\n"],"mappings":";gCAEIA,mBAAA,CAAyC,YAArC,kCAAgC;;;;uBADtCC,mBAAA,CAiBM,cAhBJC,UAAyC,G,kBACzCD,mBAAA,CAcME,SAAA,QAAAC,WAAA,CAdmBC,IAAA,CAAAC,KAAK,EAAlBC,SAAS;yBAArBN,mBAAA,CAcM;MAd2BO,GAAG,EAAED,SAAS,CAACE;QAC9CC,YAAA,CAYcC,sBAAA;MAXXC,EAAE;;;cAA6EL,SAAS,CAACE,EAAE;gBAAqBF,SAAS,CAACM,cAAc;eAAoBN,SAAS,CAACO,GAAG;gBAAqBP,SAAS,CAACQ;;;;wBAUzM,MAA6B,CAA7Bf,mBAAA,CAA6B,YAAAgB,gBAAA,CAAtBT,SAAS,CAACQ,IAAI,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}